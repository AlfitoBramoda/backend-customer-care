{
	"info": {
		"_postman_id": "0d8c7a3d-330d-48d7-89c3-f9e8aa47911b",
		"name": "BNI Customer Care Chatbot API",
		"description": "Complete API collection for testing BNI Customer Care Chatbot endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36012371",
		"_collection_link": "https://bcare-final.postman.co/workspace/bcare-final-Workspace~9646d035-d752-4251-80c1-bc6f64b87782/collection/36012371-0d8c7a3d-330d-48d7-89c3-f9e8aa47911b?action=share&source=collection_link&creator=36012371"
	},
	"item": [
		{
			"name": "Health & Status",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/healthz",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "Socket.IO Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/socket-status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"socket-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test LM Studio Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/test-lm",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"test-lm"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chatbot API",
			"item": [
				{
					"name": "Start New Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Save session_id from response for other requests",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.session_id) {",
									"        pm.collectionVariables.set('session_id', response.session_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Halo, saya butuh bantuan\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat - Complaint Credit Card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Saya mau komplain kartu kredit saya, namanya John Doe, rekening 1234567890\",\n  \"session_id\": \"{{session_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat - Account Problem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Rekening saya bermasalah, tidak bisa transfer. Nama saya Jane Smith rekening 9876543210\",\n  \"session_id\": \"{{session_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat - Follow Up Question",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Saya ingin dihubungi besok sore sekitar jam 3-5\",\n  \"session_id\": \"{{session_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat Session Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chat/{{session_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat",
								"{{session_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Legacy Endpoints",
			"item": [
				{
					"name": "Extract Data from Text",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Saya mau komplain kartu kredit, nama saya Ahmad Rizki, nomor rekening 1234567890123456, masalahnya limit kartu kredit tidak sesuai\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/extract",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"extract"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clarify Extracted Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"state_id\": \"your-state-id-here\",\n  \"answers\": {\n    \"channel\": \"mobile_banking\",\n    \"priority\": \"medium\",\n    \"standby_call_window\": \"14:00-16:00\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/clarify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clarify"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Knowledge Base",
			"item": [
				{
					"name": "Search FAQ - Balance Inquiry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/faq?q=saldo minimum",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faq"
							],
							"query": [
								{
									"key": "q",
									"value": "saldo minimum"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search FAQ - Transfer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/faq?q=transfer antar bank",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faq"
							],
							"query": [
								{
									"key": "q",
									"value": "transfer antar bank"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search SLA - Credit Card",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/sla?q=kartu kredit&category=complaint&limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sla"
							],
							"query": [
								{
									"key": "q",
									"value": "kartu kredit"
								},
								{
									"key": "category",
									"value": "complaint"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search SLA - Account Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/sla?q=rekening terblokir&limit=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sla"
							],
							"query": [
								{
									"key": "q",
									"value": "rekening terblokir"
								},
								{
									"key": "limit",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Frontend Test Cases",
			"item": [
				{
					"name": "Complete Customer Journey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Selamat pagi, saya mengalami masalah dengan mobile banking. Nama saya Budi Santoso, nomor rekening 1122334455667788. Aplikasi mobile banking saya error terus dan tidak bisa login. Saya mau komplain dan minta solusinya. Tolong hubungi saya hari ini antara jam 2-4 sore melalui telepon.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Error Handling - Empty Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Error Handling - Missing Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"session_id\": \"test-session\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Error Handling - Invalid Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chat/invalid-session-id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chat",
								"invalid-session-id"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Chat Session Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response has session_id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('session_id');",
							"    ",
							"    // Save session_id for next requests",
							"    pm.environment.set('session_id', jsonData.data.session_id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"ticket_id\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/v1/chats/sessions",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"chats",
						"sessions"
					]
				},
				"description": "Create a new chat session for a ticket. The session_id will be the same as ticket_id."
			},
			"response": [
				{
					"name": "Success - Session Created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ticket_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/chats/sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"chats",
								"sessions"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": true,\n  \"message\": \"Chat session created\",\n  \"data\": {\n    \"session_id\": 1\n  }\n}"
				},
				{
					"name": "Error - Ticket Not Found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ticket_id\": 99999\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/chats/sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"chats",
								"sessions"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": false,\n  \"message\": \"Ticket not found\"\n}"
				}
			]
		},
		{
			"name": "Send Message Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response has message data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('chat_id');",
							"    pm.expect(jsonData.data).to.have.property('message');",
							"    pm.expect(jsonData.data).to.have.property('sent_at');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sender_id\": 1,\n  \"sender_type_id\": 1,\n  \"message\": \"Halo, saya butuh bantuan dengan kartu ATM saya\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/v1/chats/{{session_id}}/messages",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"chats",
						"{{session_id}}",
						"messages"
					]
				},
				"description": "Send a message to an existing chat session. Use session_id from previous request or set manually."
			},
			"response": [
				{
					"name": "Success - Message Sent",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender_id\": 1,\n  \"sender_type_id\": 1,\n  \"message\": \"Halo, saya butuh bantuan dengan kartu ATM saya\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/chats/1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"chats",
								"1",
								"messages"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": true,\n  \"message\": \"Message sent\",\n  \"data\": {\n    \"chat_id\": 4,\n    \"ticket_id\": 1,\n    \"sender_id\": 1,\n    \"sender_type_id\": 1,\n    \"message\": \"Halo, saya butuh bantuan dengan kartu ATM saya\",\n    \"sent_at\": \"2025-08-26T10:30:00.000Z\",\n    \"id\": 4\n  }\n}"
				},
				{
					"name": "Error - Invalid Sender Type",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender_id\": 1,\n  \"sender_type_id\": 999,\n  \"message\": \"Test message\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/chats/1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"chats",
								"1",
								"messages"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": false,\n  \"message\": \"Invalid sender_type_id\"\n}"
				}
			]
		},
		{
			"name": "Send Employee Response Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sender_id\": 1,\n  \"sender_type_id\": 2,\n  \"message\": \"Halo! Saya akan membantu Anda dengan masalah kartu ATM. Bisa jelaskan masalah yang Anda alami?\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/v1/chats/{{session_id}}/messages",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"chats",
						"{{session_id}}",
						"messages"
					]
				},
				"description": "Send employee response message (sender_type_id: 2 = Employee)"
			},
			"response": []
		},
		{
			"name": "Get Chat Messages Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response has pagination info\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('pagination');",
							"    pm.expect(jsonData.pagination).to.have.property('total_items');",
							"});",
							"",
							"pm.test(\"Response has data array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/v1/chats/{{session_id}}/messages?limit=50&offset=0",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"chats",
						"{{session_id}}",
						"messages"
					],
					"query": [
						{
							"key": "limit",
							"value": "50",
							"description": "Number of messages to retrieve (max 200)"
						},
						{
							"key": "offset",
							"value": "0",
							"description": "Number of messages to skip for pagination"
						},
						{
							"key": "since",
							"value": "2025-08-26T00:00:00Z",
							"description": "Only return messages sent after this timestamp",
							"disabled": true
						}
					]
				},
				"description": "Retrieve chat messages for a session with pagination and optional date filtering."
			},
			"response": [
				{
					"name": "Success - Messages Retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/chats/1/messages?limit=50&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"chats",
								"1",
								"messages"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": true,\n  \"message\": \"Messages retrieved successfully\",\n  \"pagination\": {\n    \"current_page\": 1,\n    \"per_page\": 50,\n    \"total_items\": 2,\n    \"total_pages\": 1,\n    \"has_next\": false,\n    \"has_prev\": false\n  },\n  \"data\": [\n    {\n      \"chat_id\": 1,\n      \"ticket_id\": 1,\n      \"sender_id\": 1,\n      \"sender_type_id\": 1,\n      \"message\": \"Halo, kartu saya tertelan.\",\n      \"sent_at\": \"2025-08-14T08:05:00Z\",\n      \"id\": 1,\n      \"ticket\": {\n        \"ticket_id\": 1\n      },\n      \"sender_type\": {\n        \"sender_type_id\": 1,\n        \"name\": \"Customer\"\n      }\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get Recent Messages (with since filter) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/v1/chats/{{session_id}}/messages?limit=10&since=2025-08-26T00:00:00Z",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"chats",
						"{{session_id}}",
						"messages"
					],
					"query": [
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "since",
							"value": "2025-08-26T00:00:00Z",
							"description": "Only show messages from today"
						}
					]
				},
				"description": "Get only recent messages using the 'since' filter to show messages after a specific timestamp."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "session_id",
			"value": "{{$randomUUID}}",
			"type": "string"
		}
	]
}